from dolfin import *
import numpy as np
from petsc4py import PETSc
from petsc4py.PETSc import Mat


mesh4 = Mesh("../level1_bad.xml") 
V4 = VectorFunctionSpace(mesh4, "Lagrange", 1)
n4 = mesh4.num_vertices()
V3dm = V4.dofmap()
cq2 = MeshQuality.radius_ratios(mesh4)
cq = cq2.array()

indices = np.where(cq < 0.1)[0]

#indices=[63488, 63489, 10245, 55307, 51212, 51214, 16408, 36897, 49188, 43048, 38957, 34864, 51, 38970, 51271, 76, 32857, 49243, 59484, 20574, 24671, 32865, 6243, 26731, 22636, 4206, 12400, 10353, 6260, 6262, 45178, 24706, 47236, 26764, 22675, 6295, 16537, 53402, 49318, 53434, 35004, 20671, 16576, 45248, 6340, 26823, 14536, 55499, 49357, 30929, 37074, 22747, 53472, 14561, 45280, 16616, 55531, 6387, 39162, 55549, 35074, 33028, 63751, 63752, 24841, 49423, 22801, 43282, 49428, 51476, 61718, 61719, 47384, 37145, 279, 12572, 28956, 31013, 300, 41265, 311, 59704, 14654, 51521, 8515, 31047, 35146, 14667, 51540, 39255, 57689, 24939, 364, 10609, 22898, 39283, 51569, 55673, 37245, 53634, 37260, 29071, 20880, 55698, 57747, 53650, 57749, 53657, 27036, 31137, 45479, 4525, 35248, 14771, 61877, 61879, 8634, 8637, 12738, 61891, 29125, 39367, 4553, 37330, 51669, 35286, 4567, 29146, 476, 41445, 49645, 29166, 495, 6638, 12783, 59897, 27131, 8700, 6652, 21002, 4622, 2580, 25109, 21013, 23067, 53797, 27176, 6698, 27180, 23084, 2606, 18993, 8755, 8758, 21057, 51788, 29266, 33364, 51797, 51804, 10845, 37470, 47717, 37485, 47725, 29293, 4720, 626, 35443, 25207, 21113, 64122, 64123, 25212, 62075, 62077, 49788, 21114, 64124, 62076, 62078, 35463, 647, 25223, 45703, 12939, 29324, 10891, 19086, 4745, 49810, 21141, 4758, 62103, 62104, 39576, 6819, 29348, 27314, 43699, 41652, 2741, 4790, 8889, 35516, 4799, 4801, 23233, 35529, 2762, 37580, 56016, 15067, 2779, 21215, 21222, 15079, 19176, 37608, 749, 6894, 15086, 6897, 756, 23285, 58101, 2808, 23295, 51969, 19202, 11011, 39681, 21262, 64275, 64276, 15129, 41756, 800, 27438, 54063, 47919, 11058, 27443, 29496, 45887, 4932, 9028, 29510, 29508, 4936, 11081, 13131, 2893, 56155, 64350, 64351, 64352, 64353, 25441, 45929, 50032, 2938, 17276, 58237, 45951, 41856, 33674, 13197, 52115, 15256, 64412, 5021, 64413, 56223, 2987, 62380, 62379, 19376, 948, 56245, 31676, 11201, 50116, 7108, 5067, 31692, 11214, 27598, 19419, 988, 990, 15341, 41967, 39925, 35830, 11255, 37877, 11253, 39930, 56315, 15355, 54270, 44030, 29699, 31748, 44038, 5132, 13328, 35862, 39959, 5143, 64541, 64542, 52253, 7197, 46115, 29732, 1062, 42024, 5173, 37943, 60472, 11321, 52280, 25660, 37952, 37959, 46154, 23630, 52302, 46161, 31825, 11345, 5209, 17508, 33896, 35944, 40048, 52336, 64628, 64629, 3193, 40057, 7291, 56443, 27775, 44162, 25733, 15496, 17556, 38037, 54420, 58517, 44182, 64666, 13467, 64667, 3227, 3232, 19628, 58542, 54455, 5307, 38076, 48323, 11462, 21712, 42194, 3282, 46296, 1245, 27876, 34024, 50410, 19693, 7407, 23792, 54512, 7412, 38135, 27899, 19707, 34056, 25869, 50446, 15634, 54549, 48408, 17691, 3355, 54559, 42277, 54570, 42286, 1328, 7473, 25906, 9525, 44345, 1339, 54588, 23878, 30023, 50509, 19792, 1364, 9556, 32088, 60762, 60763, 19802, 3422, 34151, 15719, 54631, 1389, 7536, 15728, 34166, 36217, 64894, 64896, 7554, 17795, 36226, 30091, 5516, 62865, 19861, 19864, 50587, 42400, 1441, 9634, 60833, 32164, 60834, 32172, 5555, 28086, 52665, 21946, 28099, 19908, 42435, 54723, 50631, 9672, 52682, 48590, 3535, 19922, 5586, 5589, 54743, 46558, 50655, 7652, 15845, 46566, 62951, 17896, 52712, 62952, 36324, 44525, 48624, 34291, 24064, 9729, 19979, 38414, 19983, 58895, 5652, 54805, 5657, 3611, 63004, 19998, 22047, 46627, 36388, 9767, 52776, 50733, 42553, 40511, 36427, 56910, 9808, 42581, 24151, 15960, 34392, 20056, 54877, 22115, 30308, 3685, 18026, 5741, 52846, 38511, 24179, 48760, 63097, 63098, 3715, 11909, 34442, 30348, 40594, 18072, 48794, 20126, 3744, 30371, 57003, 5805, 11949, 9909, 38585, 22208, 9924, 26310, 65229, 65247, 65248, 65249, 65250, 61160, 61161, 1773, 52980, 46839, 59128, 59132, 59135, 18178, 5891, 52997, 48903, 7945, 12041, 26383, 40722, 18195, 22295, 48920, 20250, 22306, 40742, 12081, 23161, 59187, 44854, 3903, 24385, 30539, 26446, 20308, 20309, 63322, 34651, 63323, 8030, 28511, 28515, 53092, 44901, 26471, 5994, 5995, 32618, 22381, 59244, 55152, 32624, 10102, 20342, 34681, 24442, 14215, 44939, 36748, 30603, 30604, 20387, 22437, 26536, 4010, 49068, 57262, 44977, 4025, 47038, 36804, 57285, 8142, 4051, 42964, 20440, 30695, 12264, 53225, 12274, 18430]
#indices =#quit()
#indices=[106]

#cell = Cell(mesh4, 106)
#v= vertices(cell)
#print(V3dm.cell_dofs(106))
#print(cell.get_vertex_coordinates())
#quit()
dof_set = []
cell_set = []
for i in indices:
 	cell = Cell(mesh4, i)
 	for v in vertices(cell):	
 		for c in cells(v):
 			cell_set += [c.index()]
 			dof_set.extend(V3dm.cell_dofs(c.index()))

bad_dofs = list(set(dof_set))
bad_cells = list(set(cell_set))


#print('BAD CELLS=', bad_cells)
print('BAD DOFS=', bad_dofs)
print(len(bad_dofs))